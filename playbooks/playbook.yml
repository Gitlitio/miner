- name: set up connection before gathering facts
  hosts: all
  gather_facts: no
  roles:
    - ansible/setup/connection
  tags:
    - always

- name: connect and gather facts
  hosts: all
  tasks:
    - name: node summary
      debug:
        msg: >-
          {{ ansible_all_ipv4_addresses | join(' ') }},
          {{ ansible_distribution }} {{ ansible_distribution_version }},
          {{ ansible_processor_vcpus }} CPU(s),
          {{ ansible_memtotal_mb }} MB memory
  tags:
    - always
    - connect

- name: bootstrap connection credentials
  hosts: all
  roles:
    - role: ansible/setup/bootstrap
      when: bootstrap|default(false)|bool
  tags:
    - bootstrap

- name: set up ansible environment on remote
  hosts: all
  roles:
    - ansible/remote
  tags:
    - always
    - base-setup  # not part of base tag since really a setup task but needs apt mirrors, etc. from previous base plays
    - ansible-remote

- name: common
  hosts: all
  roles:
    - common
  tags:
    - always
    - base
    - common

- hosts: project-files
  roles:
    - role: generic/project-files
  tags:
    - project-files

- hosts: ddclient
  roles:
    - role: generic/ddclient
  tags:
    - ddclient

- hosts: openvpn-client
  roles:
    - role: generic/openvpn-client
  tags:
    - openvpn-client

- hosts: docker
  roles:
    - role: galaxy/docker
      docker_users:
        - telegraf  # Necessary so telegraf can read from the socket
      tags:
        - docker-daemon
    - role: generic/docker-stats
      docker_stats_state: "{{ 'present' if docker_service_enabled else 'absent' }}"
      tags:
        - docker-stats
  tags:
    - docker

- hosts: docker
  tasks:
    - name: create docker containers
      when: docker_compose_definition is defined
      community.general.docker_compose:
        state: "{{ docker_compose_state|default('present') }}"
        remove_images: all
        remove_volumes: yes
        remove_orphans: yes
        project_name: "{{ docker_compose_project_name|default(inventory_hostname) }}"
        definition: "{{ docker_compose_definition }}"
        pull: yes
      tags:
        - docker-compose
  tags:
    - docker

- hosts: msi-rgb
  roles:
    - role: generic/msi-rgb
  tags:
    - msi-rgb

- hosts: x11vnc
  roles:
    - role: generic/x11vnc
  tags:
    - x11vnc

- hosts: network-ups-tools
  roles:
    - role: generic/network-ups-tools
    - role: generic/network-ups-tools-stats
      tags:
        - network-ups-tools-stats
  tags:
    - network-ups-tools

- hosts: tplink-plug-stats
  roles:
    - role: generic/tplink-plug-stats
  tags:
    - tplink-plug-stats

- hosts: coin-stats
  roles:
    - role: generic/coin-stats
      coin_stats_coingecko_ids: "{{ coingecko_ids.split(',') }}"
  tags:
    - coin-stats

- hosts: nicehash
  roles:
    - role: mining/nicehash-stats
      tags:
        - nicehash-stats
  tags:
    - nicehash

- hosts: grafana-dashboards
  roles:
    - role: generic/grafana-dashboards
  tags:
    - grafana-dashboards

- hosts: nvidia-miner
  roles:
    - role: galaxy/nvidia-drivers
      nvidia_driver_ubuntu_cuda_package: cuda
      nvidia_driver_package_version: "11.5.1-1"
      nvidia_driver_ubuntu_install_from_cuda_repo: yes
      tags:
        - cuda
        - nvidia-drivers
    - role: mining/nvidia-smi-stats
      tags:
        - nvidia-smi-stats
    - role: mining/nvidia-overclock
      tags:
        - nvidia-overclock
  tags:
    - nvidia
    - nvidia-miner

- hosts: ethereum
  roles:
    - role: mining/ethminer-coin
      ethminer_coin_state: "{{ ethereum_state|default('present') }}"
      ethminer_coin_name: ethereum
      ethminer_coin_pool: "{{ ethereum_pool }}"
      ethminer_coin_api_port: "{{ ethereum_api_port|default('0') }}"
      ethminer_coin_cuda_block_size: "{{ ethereum_cuda_block_size|default(128)|int }}"
      ethminer_coin_cuda_grid_size: "{{ ethereum_cuda_grid_size|default(8192)|int }}"
      ethminer_coin_cuda_streams: "{{ ethereum_cuda_streams|default(2)|int }}"
      ethminer_coin_cuda_schedule: "{{ ethereum_cuda_schedule|default('auto') }}"
      ethminer_coin_overclock_at_start: "{{ ethereum_overclock_at_start|default('no')|bool }}"
      tags:
        - ethminer
  tags:
    - ethereum
