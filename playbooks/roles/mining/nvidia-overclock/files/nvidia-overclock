#!/usr/bin/env bash
set -e

# Initialize our own variables:
DEVICES=""
POWER=""
PM=""
CLOCK=""
MEM=""
FAN=""
TARGET_TEMP=""
POWER_MIZER_MODE=1

function usage(){
   echo "Overclock Nvidia GPUs with the given settings."
   echo "Usage: $0 [OPTIONS]"
   echo ""
   echo "   Options:"
   echo "      -i Target a specific GPU or Unit"
   echo "      -l Specifies maximum power management limit in watts"
   echo "      -p Set persistence mode: 0/DISABLED, 1/ENABLED"
   echo "      -c GPU clock offset"
   echo "      -m Memory clock offset"
   echo "      -f Fan speed as percent"
   echo "      -g GPU Power Mizer mode: 0/DISABLED, 1/ENABLED (Default)"
   echo "      -t GPU target temperature in degree celsius"
   echo ""
   exit
}

function getOptions(){
   while getopts "i:l:p:c:m:f:t:g:h" opt ; do
     case $opt in
        i)
           export DEVICES=$OPTARG
           ;;
        l)
           export POWER=$OPTARG
           ;;
        p)
           export PM=$OPTARG
           ;;
        c)
           export CLOCK=$OPTARG
           ;;
        m)
           export MEM=$OPTARG
           ;;
        s)
           export STATE=$OPTARG
           ;;
        f)
           export FAN=$OPTARG
           ;;
        t)
           export TARGET_TEMP=$OPTARG
           ;;
        g)
           export POWER_MIZER_MODE=$OPTARG
           ;;
        h)
           usage
           exit
           ;;
        :)
           echo "Option -$OPTARG requires an argument"
           exit
           ;;
        *)
           usage
           ;;
     esac
   done
}

function printValues(){
   # for debugging
   echo "DEVICES: ${DEVICES}"
   echo "POWER: ${POWER}"
   echo "PM: ${PM}"
   echo "CLOCK: ${CLOCK}"
   echo "MEM: ${MEM}"
   echo "FAN: ${FAN}"
   echo "TARGET_TEMP: ${TARGET_TEMP}"
   echo "POWER_MIZER_MODE: ${POWER_MIZER_MODE}"
   echo "Leftovers: $@"
   echo "NVIDIA_SETTINGS: ${NVIDIA_SETTINGS}"
   echo "NVIDIA_SMI: ${NVIDIA_SMI}"
   echo "DISPLAY: ${DISPLAY}"
   echo "XAUTHORITY: ${XAUTHORITY}"
}

getOptions $@

NVIDIA_SETTINGS="$(which nvidia-settings)"
NVIDIA_SMI="$(which nvidia-smi)"

if [ "$NVIDIA_SETTINGS" == "" ] || [ "$NVIDIA_SMI" == "" ] ; then
   echo "Error: missing nvidia-settings and/or nvidia-smi"
   echo "Please be sure that you installed the nvidia drivers."
   exit
fi

export DISPLAY=:0
export XAUTHORITY=/var/run/lightdm/root/${DISPLAY}

SETTINGS_CMD="${NVIDIA_SETTINGS}"
if [ "$DEVICES" != "" ]; then
    IFS=","
    for device in ${DEVICES}
    do
        SETTINGS_CMD="${SETTINGS_CMD} -a [gpu:${device}]/GPUPowerMizerMode=${POWER_MIZER_MODE}"
        [ "$PM" != "" ] && ${NVIDIA_SMI} -i ${device} -pm ${PM}
        [ "$POWER" != "" ] && ${NVIDIA_SMI} -i ${device} -pl ${POWER}
        [ "$TARGET_TEMP" != "" ] && ${NVIDIA_SMI} -i ${device} -gtt ${TARGET_TEMP}
        [ "$FAN" == "auto" ] && SETTINGS_CMD="${SETTINGS_CMD} -a [gpu:${device}]/GPUFanControlState=0"
        [ "$FAN" != "" -a "$FAN" != "auto" ] && SETTINGS_CMD="${SETTINGS_CMD} -a [gpu:${device}]/GPUFanControlState=1 -a [fan:${device}]/GPUTargetFanSpeed=${FAN}"
        [ "$CLOCK" != "" ] && SETTINGS_CMD="${SETTINGS_CMD} -a [gpu:${device}]/GPUGraphicsClockOffsetAllPerformanceLevels=${CLOCK}"
        [ "$MEM" != "" ] && SETTINGS_CMD="${SETTINGS_CMD} -a [gpu:${device}]/GPUMemoryTransferRateOffsetAllPerformanceLevels=${MEM}"
    done
else
    SETTINGS_CMD="${SETTINGS_CMD} -a GPUPowerMizerMode=${POWER_MIZER_MODE}"
    [ "$PM" != "" ] && ${NVIDIA_SMI} -pm ${PM}
    [ "$POWER" != "" ] && ${NVIDIA_SMI} -pl ${POWER}
    [ "$TARGET_TEMP" != "" ] && ${NVIDIA_SMI} -gtt ${TARGET_TEMP}
    [ "$FAN" == "auto" ] && SETTINGS_CMD="${SETTINGS_CMD} -a GPUFanControlState=0"
    [ "$FAN" != "" -a "$FAN" != "auto" ] && SETTINGS_CMD="${SETTINGS_CMD} -a GPUFanControlState=1 -a GPUTargetFanSpeed=${FAN}"
    [ "$CLOCK" != "" ] && SETTINGS_CMD="${SETTINGS_CMD} -a GPUGraphicsClockOffsetAllPerformanceLevels=${CLOCK}"
    [ "$MEM" != "" ] && SETTINGS_CMD="${SETTINGS_CMD} -a GPUMemoryTransferRateOffsetAllPerformanceLevels=${MEM}"
fi

eval "${SETTINGS_CMD}"

exit 0
